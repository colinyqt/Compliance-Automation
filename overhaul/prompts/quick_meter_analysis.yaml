# prompts/quick_meter_analysis.yaml
name: "Quick Meter Analysis"
description: "Simple meter recommendation for any document"
version: "1.1"

inputs:
  - name: "document"
    type: "file"
    required: true
    formats: ["txt"]
    description: "Document to analyze"

databases:
  meters: 'C:\Users\cyqt2\Database\overhaul\databases\meters.db'

processing_steps:
  - name: "extract_clauses"
    prompt_template: |
      You are an expert at analyzing technical documents.
      Extract all relevant meter-related clauses or requirements from the following document.
      For each clause, provide:
        - clause_id (or a short identifier)
        - full text of the clause or requirement

      DOCUMENT:
      {{ inputs.document.content }}

      Return JSON:
      {
        "clauses": [
          {
            "clause_id": "e.g. 3.1",
            "text": "full clause text"
          }
        ]
      }

  - name: "recommend_meters"
    dependencies: ["extract_clauses"]
    prompt_template: |
      For each clause below, recommend the top 3 most suitable meters from the database.
      Use the clause text to determine the requirements.

      CLAUSES:
      {{ step_results.extract_clauses.parsed_result.clauses | tojson(indent=2) }}

      AVAILABLE METERS:
      {{ databases.meters.query("SELECT model_name, series_name, accuracy_class, communication_protocols, product_type, selection_blurb FROM Meters") | tojson(indent=2) }}

      DATABASE SCHEMA:
      {{ database_schemas.meters | tojson(indent=2) }}

      Your task:
      - For each clause, recommend the 3 best meters (by model_name) and explain why.
      - Return ONLY a valid JSON object as shown above. Do NOT return markdown, explanations, or any text outside the JSON. If no recommendations, return {"recommendations":[]}.

      Example output:
      {
        "recommendations": [
          {
            "clause_id": "3.1",
            "top_items": [
              {
                "model_name": "PM5560",
                "series_name": "pm5000_series",
                "justification": "This item fits because..."
              }
            ]
          }
        ]
      }

  - name: "llamaindex_meter_query"
    description: "Query meters using LlamaIndex natural language interface"
    prompt_template: |
      Find meters that meet the requirements for the following clauses:
      
      {% for clause in step_results.parse_any_tender_format.parsed_result %}
      Clause {{ clause.clause_id }} - {{ clause.clause_title }}:
      {% for req in clause.key_requirements %}
      - {{ req }}
      {% endfor %}
      
      {% endfor %}
      
      Which meters in the database best match these specifications?
    timeout: 120

outputs:
  - name: "debug_clauses"
    type: "json"
    filename: "debug_clauses_{{ timestamp }}.json"
    data: "{{ step_results.extract_clauses | tojson(indent=2) }}"
  - name: "meter_recommendations_txt"
    type: "text"
    filename: "meter_recommendations_{{ timestamp }}.txt"
    content: |
      Meter Recommendations
      ====================

      {% for rec in step_results.recommend_meters.parsed_result.recommendations %}
      Clause {{ rec.clause_id }}:
      {% for item in rec.top_items %}
        - Model: {{ item.model_name }} ({{ item.series_name }})
          Justification: {{ item.justification }}
      {% endfor %}
      {% endfor %}
  - name: "debug_recommend_meters"
    type: "json"
    filename: "debug_recommend_meters_{{ timestamp }}.json"
    data: "{{ step_results.recommend_meters | tojson(indent=2) }}"